<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Amazon Connect on AWS China Partner Workshop</title>
    <link>/categories/amazon-connect/</link>
    <description>Recent content in Amazon Connect on AWS China Partner Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Oct 2022 11:15:17 +0800</lastBuildDate><atom:link href="/categories/amazon-connect/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>配置Amazon Connect使用Keycloak SAML进行单点登录</title>
      <link>/connect/configure-amazon-connect-keycloak-with-saml-sso/</link>
      <pubDate>Sun, 09 Oct 2022 18:05:51 +0800</pubDate>
      
      <guid>/connect/configure-amazon-connect-keycloak-with-saml-sso/</guid>
      <description>Amazon Connect Amazon Connect 是云原生的智能呼叫中心服务，它按用户的使用量（电话呼入的时间、以及处理的消息数）进行付费，能够在一天之内搭建客户服务中心，并实现智能流程，所以是企业接入用户的一个非常好的选择。
Amazon Connect 支持集中用户认证，1) 内置的用户系统 2) Active Directory 3) 基于SAML2.0 的认证服务器。
如果客户想要在自己的CRM系统，或者客服工作台使用 Amazon Connect，就需要使用 AD 或，基于SAML2.0 的认证服务器，来实现与现有系统的单点登录（SSO）。
在本文中，我们将介绍如何使用 Keycloak 作为认证服务，通过 SAML 协议为 Amazon Connect 提供单点登录功能。
如果想要使用 Okta、Azure AD 等认证服务器，请参考 Amazon Connect SSO Setup Workshop。
Keycloak 与 SAML Keycloak Keycloak 是一款开源的身份与访问控制软件，提供单点登录 (SSO) 功能，支持 OpenID、 OAuth 2.0、SAML 2.0 等标准协议。Keycloak 提供可自定义的用户界面，用于登录、注册和账户管理等。而且，客户可以使用 Keycloak 并将身份验证委派给现有的 LDAP 和 Azure Active Directory，或第三方身份提供商，实现灵活的认证服务。
SAML 2.0 协议 SAML，即安全断言标记语言（Security Assertion Markup Language）是一个基于 XML 的开源标准数据格式，通过在各方之间交换身份验证和授权数据，实现跨域的单点登录。
SAML协议中，包含两个主体：
Identity Provider 身份提供方，简称 IdP。即通常说的认证服务器，它保存用户及密码等信息，为用户提供登录服务，并在登录成功后为服务提供方提供身份断言（ID Assertion），即标识某个人身份的Token。 Service Provider 服务提供方，简称 SP。即通常所说的应用，如 CRM 系统等，用户在身份提供方登录成功后，会跳转到应用界面进行操作。 两个主体通过浏览器进行信息交换，例如使用带有参数的重定向请求，下图就是 SAML 2.</description>
    </item>
    
    <item>
      <title>配置Amazon Connect使用 Authing SAML进行单点登录</title>
      <link>/connect/configure-amazon-connect-and-authing-with-saml-sso/</link>
      <pubDate>Wed, 12 Oct 2022 11:13:17 +0800</pubDate>
      
      <guid>/connect/configure-amazon-connect-and-authing-with-saml-sso/</guid>
      <description>Authing 是在云上为企业和开发者提供专业的身份认证和授权服务，也支持 SAML 2.0 协议。本文介绍如何使用 Authing 认证服务，来实现 Amazon Connect 的单点登录。
对于，SAML 协议以及使用 SAML 协议进行单点登录的详解，可以参考另一篇文章 配置 Amazon Connect 使用 Keycloak SAML 进行单点登录。在本文中，就只是简单介绍在 Authing 中配置时需要设置和注意的几个地方。
创建 Authing 应用 首先需要在 Authing 里面创建一个应用，具体过程参考官方文档：成为 SAML2 身份源。即创建一个应用，然后在这个应用中启用 SAML，在配置当中，配置 ACS 地址为 https://signin.aws.amazon.com/saml。回调地址就是 https://ap-northeast-2.console.aws.amazon.com/connect/federate/d47fc0b2-83c2-4af9-b78a-6d312739b4a3 这样的地址。
然后，还需要创建几个自定义 SAML Response 属性，就像在上一篇文档中创建的几个属性：
https://aws.amazon.com/SAML/Attributes/Role https://aws.amazon.com/SAML/Attributes/RoleSessionName https://aws.amazon.com/SAML/Attributes/SessionDuration 其中 https://aws.amazon.com/SAML/Attributes/Role 就是要映射到 AWS 的角色，所以也需要先创建相应的身份提供商以及角色。
在 AWS 中配置使用 Authing SAML 同样的，我们需要在 AWS 中创建 Authing 的身份提供商，有关这个，Authing 也提供了文档使用 SAML2 登录 AWS 控制台（中国区）。
具体过程也是一样，先从 Authing 获取描述文件，然后在 AWS 创建的时候使用该描述文件导入，创建身份提供商后在创建角色，用于 Authing 登录的用户访问 AWS 的 Connect 服务。</description>
    </item>
    
    <item>
      <title>Amazon Connect实现客户评分反馈</title>
      <link>/connect/post-review-with-contact-flow/</link>
      <pubDate>Fri, 21 Oct 2022 11:15:17 +0800</pubDate>
      
      <guid>/connect/post-review-with-contact-flow/</guid>
      <description>在呼叫中心中，常见的一种使用场景是在客服或者机器人客服完成会话后，提示客户对服务进行评分或评价，以便对客户服务进行改进。在 Amazon Connect 中，我们同样可以通过 Contact Flow 来实现该功能。
在这篇文章中，它通过Lex的到评分，并设置到 Contact 属性，再通过启用日志分析，使用Kinesis+Glue+Athena的日志分析方案来得到属性中的评分。在这篇文章中，我们尝试使用另一种方式来实现这一目标。
实现原理 对客服进行评价，一般是客服人员挂断后，进入另一个流程，提示客户进行评价，客户用语音或键盘输入评价内容或评分后，再挂断电话。
但是，现在除了电话客服，也会越来越多的使用消息客服，像短信、社交媒体消息，如企业微信、或Facebook Messenger等。在这种消息类型的场景下，流程也是类似的，也是客服人员完成当前会话，这时再进入另一个流程，提示客户评价，处理评价结果，再关闭该会话。
在 Amazon Connect，我们使用一种 Set disconnect flow 的 block 类型来实现。当我们给一个流程设置了 Disconnect flow 以后，当客服结束会话的时候，就会进入这个 Disconnect flow 的流程。这时，客服人员已经退出，他不会再看到客户评价的任何内容。而评价的处理和保存可以通过 LexBot 或者 Lambda 函数来处理。该退出流程如下：
它通过 Get customer input block来接受用户输入，再用 Set Contract attribute 将用户数据的评分保存在当前会话中，然后使用 Invoke AWS Lambda function 调用 Lambda 函数将用户评分保存到数据库中。然后才真正结束该会话。
Get customer input Block Get customer input 用于接收用户输入，一般用于让当前用户输入密码进行验证，或者提供个人信息用于验证等。所以，这个 Block 不能用于一般的消息类的会话，只能用于语音会话。如果要用于消息类的，则需要通过 LexBot 来使用。也就是在 AWS 中配置 LexBot 接收用户的输入，识别其意图，然后针对识别的意图进行后续处理。所以在这个场景下，为了让我们的流程既能处理语音，也能处理消息，所以就使用了 LexBot。这里的 LexBot 只是提示用户评分，然后将评分结果存到 Slot 中。</description>
    </item>
    
    <item>
      <title>Amazon Connect&#43;&#43; 解决方案设计</title>
      <link>/connect/connect-plus-solution-design/</link>
      <pubDate>Fri, 14 Oct 2022 11:13:17 +0800</pubDate>
      
      <guid>/connect/connect-plus-solution-design/</guid>
      <description>SmartOOP Auth Cognito user pool user management Cognito identity pool to access DynamoDB, AppStream PostAuth create Agent item in DynamoDB UserGroups Admin Manager Agent GraphQL API Desktops createDesktop listDesktop assignDesktop initDesktop Agents createAgent updateAgent deleteAgent listAgent REST API admin api: /admin
function: AdminFunction
Messages listMessage getOneMessage replyMessage AB III Value prodpotion(方案的价值) cdk deploy &amp;ndash;hotswap</description>
    </item>
    
  </channel>
</rss>
