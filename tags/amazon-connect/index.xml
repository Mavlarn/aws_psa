<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Amazon Connect on AWS China Partner Workshop</title><link>/tags/amazon-connect/</link><description>Recent content in Amazon Connect on AWS China Partner Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 21 Mar 2023 10:13:17 +0800</lastBuildDate><atom:link href="/tags/amazon-connect/index.xml" rel="self" type="application/rss+xml"/><item><title>配置Amazon Connect使用Keycloak SAML进行单点登录</title><link>/connect/configure-amazon-connect-keycloak-with-saml-sso/</link><pubDate>Sun, 09 Oct 2022 18:05:51 +0800</pubDate><guid>/connect/configure-amazon-connect-keycloak-with-saml-sso/</guid><description>Amazon Connect Amazon Connect 是云原生的智能呼叫中心服务，它按用户的使用量（电话呼入的时间、以及处理的消息数）进行付费，能够在一天之内搭建客户服务中心，并实现智能流程，所以是企业接入用户的一个非常好的选择。
Amazon Connect 支持集中用户认证，1) 内置的用户系统 2) Active Directory 3) 基于SAML2.0 的认证服务器。
如果客户想要在自己的CRM系统，或者客服工作台使用 Amazon Connect，就需要使用 AD 或，基于SAML2.0 的认证服务器，来实现与现有系统的单点登录（SSO）。
在本文中，我们将介绍如何使用 Keycloak 作为认证服务，通过 SAML 协议为 Amazon Connect 提供单点登录功能。
如果想要使用 Okta、Azure AD 等认证服务器，请参考 Amazon Connect SSO Setup Workshop。
Keycloak 与 SAML Keycloak Keycloak 是一款开源的身份与访问控制软件，提供单点登录 (SSO) 功能，支持 OpenID、 OAuth 2.0、SAML 2.0 等标准协议。Keycloak 提供可自定义的用户界面，用于登录、注册和账户管理等。而且，客户可以使用 Keycloak 并将身份验证委派给现有的 LDAP 和 Azure Active Directory，或第三方身份提供商，实现灵活的认证服务。
SAML 2.0 协议 SAML，即安全断言标记语言（Security Assertion Markup Language）是一个基于 XML 的开源标准数据格式，通过在各方之间交换身份验证和授权数据，实现跨域的单点登录。
SAML协议中，包含两个主体：
Identity Provider 身份提供方，简称 IdP。即通常说的认证服务器，它保存用户及密码等信息，为用户提供登录服务，并在登录成功后为服务提供方提供身份断言（ID Assertion），即标识某个人身份的Token。 Service Provider 服务提供方，简称 SP。即通常所说的应用，如 CRM 系统等，用户在身份提供方登录成功后，会跳转到应用界面进行操作。 两个主体通过浏览器进行信息交换，例如使用带有参数的重定向请求，下图就是 SAML 2.</description></item><item><title>坐席基本功能设置</title><link>/workshop_connect_agent/2-agent_basic_functions/</link><pubDate>Sat, 18 Mar 2023 11:13:17 +0800</pubDate><guid>/workshop_connect_agent/2-agent_basic_functions/</guid><description>本节将介绍一些基本的 Amazon Connect 的功能设置。
界面 首先，需要了解 Amazon Connect 有几个界面：
Amazon Console 的 Connect 界面 即从 Amazon Console 找到 Connect 服务进入的页面，这里可以创建并配置 Connect 实例。如下就是其中一个配置页： Connect 管理页面 创建完Connect 实例以后，打开Connect 的管理界面： 坐席页面 坐席的应用页面有2个地址：
基本CCP（Contact Control Panel）界面，仅包含拨号、接听的界面。 https://connect-xxxxx.my.connect.aws/ccp-v2
坐席应用界面，包括基本CCP，以及Customer信息，Case，知识库（Wisdom）等页面。 https://connect-xxxxx.my.connect.aws/agent-app-v2
如果要打开包含客户信息、case等界面的坐席应用，需要坐席具有相应的权限。默认情况下，坐席只有打开基本 CCP 界面的权限，需要在用户管理中，修改用户的 Security Profile 给他设置相应的权限。
坐席基本通话功能 坐席状态 登录后，坐席可以设置自己的状态，默认只有两种状态，Available 和 Offline。只有在 Available 状态时，坐席才能接听到客户来电。
我们也可以设置自定义的坐席状态，管理员登录到 Connect 的管理界面，从左侧菜单中找到用户管理-坐席状态菜单： 进入坐席状态列表页面，可以新建一个状态： 输入新状态的名称和描述，保存后，就可以在坐席的界面看到新的状态，坐席就可以修改自己的状态。坐席只有在 Available 状态时才能接听到来电。
坐席通话界面、通话保持以及继续 当坐席 Available 状态时，有新客户来电时，页面上会收到提示： 此时，左侧的界面会显示来电，以及电话号码，右侧的 Customer Profile 界面会试图查询该用户并显示。再通话过程中或结束后，坐席也可以编辑该信息。（坐席需要具有相应权限才能显示该页面）。
坐席接听后，就会开始通话： 坐席可以点击 Hold 进行通话保持，然后继续 Resume： 如果坐席未能及时接听，就会出现漏接电话提示： 当坐席完成客服电话挂断以后，坐席就会进入 After Call 阶段，此时坐席的通话界面不会完全结束，可以进行其他操作，例如修改客户信息，创建 Task 等。 例如创建后续任务，例如该用户后续要完成的操作等： 注意这时要创建任务之前，需要先创建一个quick connect。</description></item><item><title>配置Amazon Connect使用 Authing SAML进行单点登录</title><link>/connect/configure-amazon-connect-and-authing-with-saml-sso/</link><pubDate>Wed, 12 Oct 2022 11:13:17 +0800</pubDate><guid>/connect/configure-amazon-connect-and-authing-with-saml-sso/</guid><description>Authing 是在云上为企业和开发者提供专业的身份认证和授权服务，也支持 SAML 2.0 协议。本文介绍如何使用 Authing 认证服务，来实现 Amazon Connect 的单点登录。
对于，SAML 协议以及使用 SAML 协议进行单点登录的详解，可以参考另一篇文章 配置 Amazon Connect 使用 Keycloak SAML 进行单点登录。在本文中，就只是简单介绍在 Authing 中配置时需要设置和注意的几个地方。
创建 Authing 应用 首先需要在 Authing 里面创建一个应用，具体过程参考官方文档：成为 SAML2 身份源。即创建一个应用，然后在这个应用中启用 SAML，在配置当中，配置 ACS 地址为 https://signin.aws.amazon.com/saml。回调地址就是 https://ap-northeast-2.console.aws.amazon.com/connect/federate/d47fc0b2-83c2-4af9-b78a-6d312739b4a3 这样的地址。
然后，还需要创建几个自定义 SAML Response 属性，就像在上一篇文档中创建的几个属性：
https://aws.amazon.com/SAML/Attributes/Role https://aws.amazon.com/SAML/Attributes/RoleSessionName https://aws.amazon.com/SAML/Attributes/SessionDuration 其中 https://aws.amazon.com/SAML/Attributes/Role 就是要映射到 AWS 的角色，所以也需要先创建相应的身份提供商以及角色。
在 AWS 中配置使用 Authing SAML 同样的，我们需要在 AWS 中创建 Authing 的身份提供商，有关这个，Authing 也提供了文档使用 SAML2 登录 AWS 控制台（中国区）。
具体过程也是一样，先从 Authing 获取描述文件，然后在 AWS 创建的时候使用该描述文件导入，创建身份提供商后在创建角色，用于 Authing 登录的用户访问 AWS 的 Connect 服务。</description></item><item><title>Connect路由原理以及使用队列实现基于技能的路由</title><link>/workshop_connect_agent/3-agent_skill_by_queue/</link><pubDate>Tue, 21 Mar 2023 10:13:17 +0800</pubDate><guid>/workshop_connect_agent/3-agent_skill_by_queue/</guid><description>Amazon Connect使用队列(Queue)和路由配置(Routing Profile)实现基于坐席技能的路由。坐席-路由配置-队列之间的关系如下：
每个坐席用户(User)都有一个 RoutingProfile(路由配置)，而每个 RoutingProfile 都跟多个队列(Queue)关联。
当一个联系电话接入以后：
会由跟电话号码关联的联系流 Contact Flow 处理，在这个 Contact Flow 中，会设置要转到某个队列（也可能直接转给某个Agent）。 根据 Queue 和 Routing Profile 和 Agent 的关系，该来电会被自动分发给下一个可用的 Agent（处于空闲时间最长的 Agent）。 也可以通过设置工作时间 hours of operation，来设置某个队列的工作时间，只有在工作时间内，来电才会转接到队列内的坐席。 创建队列 首先，我们需要为不同的用户类型，或者技能组，创建不同的队列。进入 Connect 的管理界面，从左侧的菜单找到 Routing - Queues，然后点击添加创建新的队列： 这里输入队列名称和描述，一般还需要设置 Outbound caller configuration，这时设置在外呼的时候，外呼使用的号码和流程。其中有些地区还需要设置 Caller ID。
Quick connects 就是可以从这个队列的来电进行转接时，能够转接到哪些 quick connect。
最后，也可以设置 Tags 标签，这些标签用于进行基于标签的权限控制，也可以在查询指标数据的时候，根据标签进行查询。
修改或创建 Routing Profile 接下来就是创建 Routing Profile，在管理界面，找到菜单 Users - Routing Profiles，创建新的配置： 需要的配置如下：
名称和描述 Set channels and concurrenc，设置可以通过该队列，接收哪些类型的联系请求。对于 Voice(电话) 类型，同时只能接听一路电话，而队列文本消息和任务，可以设置最多可以同时处理的数量。 Queues，设置该配置关联的队列，可以设置多个，并配置每个队列里能接收的channels，以及优先级、延时。通过这个优先级可以将不同级别的客户联系转发到不同级别的队列，坐席在接听的时候，会优先接听高优先级的（数字越低优先级越高），如果优先级一样，则优先处理延时低的。 Default outbound queue，即默认呼出队列，当通过配置或API进行自动外呼时，如果需要坐席接听外呼的电话，则有这个来配置由哪个队列的坐席接听外呼时的电话。 Tags，即标签，与上面的一样，用于基于标签的权限控制和指标查询。 设置 User - Routing Profile 然后，从菜单 Users - User management 进入用户管理列表，找到要设置的用户，设置关联的 Routing Profile ： 配置 Contact Flow 最后，需要在 Contact Flow 里配置要转发的队列，最基本的 Contact Flow 如下所示： 这里首先通过 Set working queue 设置要转发的队列，一般我们可以在这里配置要转发到哪个队列，比如下面就是转发到 BasicQueue 队列： 这里也可以动态的设置目标的队列，或者直接设置某一个Agent。</description></item><item><title>Amazon Connect实现客户评分反馈</title><link>/connect/post-review-with-contact-flow/</link><pubDate>Fri, 21 Oct 2022 11:15:17 +0800</pubDate><guid>/connect/post-review-with-contact-flow/</guid><description>在呼叫中心中，常见的一种使用场景是在客服或者机器人客服完成会话后，提示客户对服务进行评分或评价，以便对客户服务进行改进。在 Amazon Connect 中，我们同样可以通过 Contact Flow 来实现该功能。
在这篇文章中，它通过Lex的到评分，并设置到 Contact 属性，再通过启用日志分析，使用Kinesis+Glue+Athena的日志分析方案来得到属性中的评分。在这篇文章中，我们尝试使用另一种方式来实现这一目标。
实现原理 对客服进行评价，一般是客服人员挂断后，进入另一个流程，提示客户进行评价，客户用语音或键盘输入评价内容或评分后，再挂断电话。
但是，现在除了电话客服，也会越来越多的使用消息客服，像短信、社交媒体消息，如企业微信、或Facebook Messenger等。在这种消息类型的场景下，流程也是类似的，也是客服人员完成当前会话，这时再进入另一个流程，提示客户评价，处理评价结果，再关闭该会话。
在 Amazon Connect，我们使用一种 Set disconnect flow 的 block 类型来实现。当我们给一个流程设置了 Disconnect flow 以后，当客服结束会话的时候，就会进入这个 Disconnect flow 的流程。这时，客服人员已经退出，他不会再看到客户评价的任何内容。而评价的处理和保存可以通过 LexBot 或者 Lambda 函数来处理。该退出流程如下：
它通过 Get customer input block来接受用户输入，再用 Set Contract attribute 将用户数据的评分保存在当前会话中，然后使用 Invoke AWS Lambda function 调用 Lambda 函数将用户评分保存到数据库中。然后才真正结束该会话。
Get customer input Block Get customer input 用于接收用户输入，一般用于让当前用户输入密码进行验证，或者提供个人信息用于验证等。所以，这个 Block 不能用于一般的消息类的会话，只能用于语音会话。如果要用于消息类的，则需要通过 LexBot 来使用。也就是在 AWS 中配置 LexBot 接收用户的输入，识别其意图，然后针对识别的意图进行后续处理。所以在这个场景下，为了让我们的流程既能处理语音，也能处理消息，所以就使用了 LexBot。这里的 LexBot 只是提示用户评分，然后将评分结果存到 Slot 中。</description></item><item><title>通过Quick Connect实现电话转接</title><link>/workshop_connect_agent/4-quick-connect-transfer-call/</link><pubDate>Mon, 20 Mar 2023 10:45:17 +0800</pubDate><guid>/workshop_connect_agent/4-quick-connect-transfer-call/</guid><description>在 Amazon Connect 中，来电（或者消息）的转接，是通过 Quick Connect 的功能完成。在坐席的CCP界面，会有一个 Quick Connect 的按钮，坐席在接听电话时，可以讲来电转接到其他的坐席、队列、或者外部号码；如果坐席没有在接听，也可以通过 Quick Connect 呼叫外部号码。
有关 Quick Connect 的工作原理和如何创建，可以参考官方文档
Quick Connect 基本原理 Quick Connect 就是指定一个预定义的目标，这样坐席就可以通过选择这个预定义的 Quick Connect 进行外呼或者电话转接。
Quick Connect 类型 根据 Quick Connect 的目标不同，有3种类型的 Quick Connect。
Phone Number 即一个电话号码，可以将当前来电转接到该电话上。Phone Number 类型的 Quick Connect 可以在坐席接听状态，或者空闲状态使用。在CCP界面中，点击 Quick Connect，即可看到一个列表。 User （Agent） 即一个坐席用户用户，用于将当前来电转接给一个坐席。
Queue 即一个队列，用于将当前来电转接到一个队列，然后由这个队列对应的坐席进行接听。
对于后两种类型，则是在坐席接听电话的过程中，进行转接： Quick Connect 如何工作 Amazon Connect 中，以用户类型的 Quick Connect 为例，使用 Quick Connect 中进行转接的流程如下：
客户拨打电话进行咨询 该电话对应某一个Contact Flow进行处理 在 Contact Flow 的流程中完成以后，电话进入某一个队列，等待坐席接听 空闲坐席Agent1接听该来电 Agent1 转接来电给 Agent2 该来电转到相应的 转接坐席 的 Contact Flow 转接 Contact Flow 完成后，坐席 Agent2 接收到来电请求，进行接听 所以，在转接给坐席的时候，实际上也是通过 Flow 来实现的。Connect 已经为我们提供了默认的流程 Default agent transfer，可以在 Flows 列表中找到。当 Agent1 通过 Quick Connect 转接给 Agent2 时，会执行这个流程。</description></item></channel></rss>