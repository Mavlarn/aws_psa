<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Contact Flow on AWS China Partner Workshop</title><link>/tags/contact-flow/</link><description>Recent content in Contact Flow on AWS China Partner Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 21 Oct 2022 11:15:17 +0800</lastBuildDate><atom:link href="/tags/contact-flow/index.xml" rel="self" type="application/rss+xml"/><item><title>Amazon Connect实现客户评分反馈</title><link>/connect/post-review-with-contact-flow/</link><pubDate>Fri, 21 Oct 2022 11:15:17 +0800</pubDate><guid>/connect/post-review-with-contact-flow/</guid><description>在呼叫中心中，常见的一种使用场景是在客服或者机器人客服完成会话后，提示客户对服务进行评分或评价，以便对客户服务进行改进。在 Amazon Connect 中，我们同样可以通过 Contact Flow 来实现该功能。
在这篇文章中，它通过Lex的到评分，并设置到 Contact 属性，再通过启用日志分析，使用Kinesis+Glue+Athena的日志分析方案来得到属性中的评分。在这篇文章中，我们尝试使用另一种方式来实现这一目标。
实现原理 对客服进行评价，一般是客服人员挂断后，进入另一个流程，提示客户进行评价，客户用语音或键盘输入评价内容或评分后，再挂断电话。
但是，现在除了电话客服，也会越来越多的使用消息客服，像短信、社交媒体消息，如企业微信、或Facebook Messenger等。在这种消息类型的场景下，流程也是类似的，也是客服人员完成当前会话，这时再进入另一个流程，提示客户评价，处理评价结果，再关闭该会话。
在 Amazon Connect，我们使用一种 Set disconnect flow 的 block 类型来实现。当我们给一个流程设置了 Disconnect flow 以后，当客服结束会话的时候，就会进入这个 Disconnect flow 的流程。这时，客服人员已经退出，他不会再看到客户评价的任何内容。而评价的处理和保存可以通过 LexBot 或者 Lambda 函数来处理。该退出流程如下：
它通过 Get customer input block来接受用户输入，再用 Set Contract attribute 将用户数据的评分保存在当前会话中，然后使用 Invoke AWS Lambda function 调用 Lambda 函数将用户评分保存到数据库中。然后才真正结束该会话。
Get customer input Block Get customer input 用于接收用户输入，一般用于让当前用户输入密码进行验证，或者提供个人信息用于验证等。所以，这个 Block 不能用于一般的消息类的会话，只能用于语音会话。如果要用于消息类的，则需要通过 LexBot 来使用。也就是在 AWS 中配置 LexBot 接收用户的输入，识别其意图，然后针对识别的意图进行后续处理。所以在这个场景下，为了让我们的流程既能处理语音，也能处理消息，所以就使用了 LexBot。这里的 LexBot 只是提示用户评分，然后将评分结果存到 Slot 中。</description></item></channel></rss>